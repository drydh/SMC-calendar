#!/bin/bash
#
# Usage: calendar [extra options to seminarmailer.py]

# ----------------------------------------------------------------------
# KTH username
user="username"

# ----------------------------------------------------------------------
# Python setup
python="python" # Replace with specific version (e.g. python2) if necessary

# On MacOS X, may need updated SSL certificates.
#
# This needs Python package certifi which can be install using
# > python -m pip install certifi
if [[ $OSTYPE == 'darwin'* ]]; then
  CERT_PATH=$($python -m certifi)
  export SSL_CERT_FILE=${CERT_PATH}
  export REQUESTS_CA_BUNDLE=${CERT_PATH}
fi

# ----------------------------------------------------------------------
# Change to script directory

cd $(dirname "${BASH_SOURCE[0]}")
install -d Archive

semads="semads.py"               # Email creator script
seminarmailer="seminarmailer.py" # Mailer script
email_list="emails.txt"          # List of emails

# ----------------------------------------------------------------------
# Calculate the dates:

start_date=$(date -d 'next Monday' +"%Y%m%d")
end_date=$(date -d 'Sunday next week' +"%Y%m%d")

start_day=$(LANG=en_US; date -d ${start_date} +"%d %B")
end_day=$(LANG=en_US; date -d ${end_date} +"%d %B")
year=$(date -d ${start_date} +"%Y")
week_number=$(date -d ${start_date} +"%V")


# ----------------------------------------------------------------------
# Create email message:

echo "Fetching seminars from $start_date to $end_date"
message_file="Archive/seminars${year}_W${week_number}.txt"
$python "$semads" --start "${start_date}" --stop "${end_date}" --output "$message_file"


# ----------------------------------------------------------------------
# Prompt user to check message:

if [[ $OSTYPE == 'darwin'* ]]; then
  open -a TextEdit $message_file
else
  nano $message_file
fi

response="No"
while [ "$response" != "y" ]; do
  echo "Please check the email. Is it ok to send? (\"y\" to send, ctrl+c to exit)"
  read response
done


# ----------------------------------------------------------------------
# Send email message:

$python $seminarmailer \
	--sendlist "${email_list}" \
	--subject "Seminars, ${start_day} - ${end_day}" \
    --message "${message_file}" \
	--username $user "$@"
